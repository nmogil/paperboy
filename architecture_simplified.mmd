graph TB
    subgraph "API Layer"
        API[FastAPI App<br/>main.py]
        Auth[API Key Auth<br/>security.py]
    end
    
    subgraph "Core Pipeline"
        Pipeline[Digest Pipeline<br/>digest_service.py]
        Fetcher[arXiv Fetcher<br/>fetcher.py]
        LLM[LLM Client<br/>llm_client.py]
    end
    
    subgraph "External Services"
        ArXiv[arXiv API]
        OpenAI[OpenAI API]
    end
    
    subgraph "Storage"
        State[Task State<br/>state.py]
        JSON[(JSON Files)]
    end
    
    %% Request Flow
    Client([Client]) -->|POST /generate-digest| API
    API --> Auth
    Auth -->|Valid| API
    API -->|Create Task| State
    API -->|Background| Pipeline
    
    %% Pipeline Steps
    Pipeline -->|1. Fetch Papers| Fetcher
    Fetcher -->|Query| ArXiv
    
    Pipeline -->|2. Rank Papers| LLM
    LLM -->|Ranking Prompt| OpenAI
    
    Pipeline -->|3. Analyze Papers| LLM
    LLM -->|Analysis Prompt| OpenAI
    
    Pipeline -->|4. Generate HTML| Pipeline
    Pipeline -->|Update Status| State
    State --> JSON
    
    %% Status Check
    Client -->|GET /digest-status/id| API
    API -->|Read| State
    
    %% Styling
    classDef api fill:#e1f5fe,stroke:#01579b,stroke-width:2px
    classDef core fill:#e8f5e9,stroke:#1b5e20,stroke-width:2px
    classDef external fill:#fff3e0,stroke:#e65100,stroke-width:2px
    classDef storage fill:#f5f5f5,stroke:#424242,stroke-width:2px
    
    class API,Auth api
    class Pipeline,Fetcher,LLM core
    class ArXiv,OpenAI external
    class State,JSON storage